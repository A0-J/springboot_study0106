buildscript {
    ext {
        springBootVersion = '2.6.3'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'org.example'
version = '1.0-SNAPSHOT'
sourceCompatibility = '11'  // Java 11로 변경
targetCompatibility = '11'  // Java 11로 변경

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'junit:junit:4.13.2'

    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'org.springframework.session:spring-session-jdbc'

    testImplementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'


}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// 실행 가능한 JAR 생성 설정
bootJar {
    archiveBaseName = 'qiena.book.springboot'  // JAR 파일 이름
    version = '1.0-SNAPSHOT'
    manifest {
        attributes(
                'Main-Class': 'com.qiena.book.springboot.Application'  // Spring Boot 실행 진입점
        )
    }
}

// 실행 불가능한 plain JAR 파일 비활성화 (bootJar만 사용)
jar {
    enabled = false
}

// JAR 빌드 시 클래스 포함 여부 확인
tasks.withType<Jar> {
    from {
        configurations.runtimeClasspath.get().filter { it.exists() }.map { if (it.isDirectory) it else zipTree(it) }
    }
}